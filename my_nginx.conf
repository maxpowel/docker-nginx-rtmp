error_log /dev/stderr info;
worker_processes auto;

pid        /var/run/nginx.pid;

events {
    worker_connections 768;
}


# RTMP
rtmp {
    server {
        listen 1935;
        notify_method get;
        # Send a request to the same nginx
        on_publish http://127.0.0.1:80/authq;


        application live {
            on_play http://127.0.0.1:80/auth;
            live on;
            record off;
            interleave on;

            # HLS
            hls on;
            hls_path /tmp/hls;
            hls_fragment 15;
            hls_playlist_length 60;

            # DASH
            dash on;
            dash_path /tmp/dash;
            dash_fragment 15s;
            
            
            # disable consuming the stream from nginx as rtmp
            deny play all;
        }
    }
}

# Authentication and Broadcast
http {
    default_type application/octet-stream;


    # Broadcast HTTP
    server {
        access_log /dev/stdout combined;
        listen 80;

        location / {
            # Disable cache
            add_header Cache-Control no-cache;
        
            #add_header Access-Control-Allow-Origin *;
             # CORS setup
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length';
            
            # allow CORS preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Max-Age' 3600;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            
            
            root /var/www/html;
        }

        location /auth {
            proxy_buffering off;
            proxy_set_header X-Real-Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_pass https://authserver/p/asdf;
        }
    
        location /pauth {
                proxy_pass_request_body off;
                proxy_set_header Content-Length \"\";
                proxy_set_header X-Original-URI $request_uri;
                proxy_pass https://authserver/p/asdf;
        }
    }

    # Broadcast HTTP/HTTPS Types
    types {
        # HLS
        application/vnd.apple.mpegurl m3u8;
        video/mp2t ts;

        # DASH
        text/html html;
        application/dash+xml mpd;
    }
}